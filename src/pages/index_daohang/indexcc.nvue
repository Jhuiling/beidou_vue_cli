<template>
	<div>
		 <!-- <div style="height: 50px;width: 100%;background-color: #ffffff;"></div> -->
		<div class="box top-2"  >
			<text style="font-size: 25rpx;background-color: #26A2FF;color: #ffffff;border-radius: 100px;text-align: center;padding: 5rpx 0rpx;"  v-on:click="weixing()">{{texrbix}}</text>
		</div>
		<div class="box top-3" v-on:click="dangqian()" style="text-align: center;width: 70rpx;height: 70rpx;" >
			<image style="width: 70rpx;height: 70rpx;" class="image" src="../../static/image/dangian.png" mode="widthFix"></image>
		</div>
		<div style="position:fixed;z-index:0;!important" v-if="manjia" ref="showshare" :class="close?'create-wrap-close':'create-wrap-open'" class="create-wrap">
			<div class="nav-bar" style="z-index:1000;position: fixed;bottom:0;height:120rpx;">
				<div class="nav-bar-item" @click="navTo('/pages/index/index')">
					<image class="nav-bar-item-icon" src="../../static/image/home@3x.png"></image>
					<text class="nav-bar-item-text">首页</text>
				</div>
				<div class="nav-bar-item" @click="navTo('/pages/storetwo/index')">
					<image class="nav-bar-item-icon" src="../../static/image/store@3x.png"></image>
					<text class="nav-bar-item-text">商城</text>
				</div>
				<div class="nav-bar-item" @click="navTo('/pages/me/index')">
					<image class="nav-bar-item-icon" src="../../static/image/me@3x.png"></image>
					<text class="nav-bar-item-text">我的</text>
				</div>
			</div>
			<div class="show-btn" @click="togglePopup()">
				<image class="show-btn-image" :src="close?'/static/image/up.png':'/static/image/down.png'" mode="scaleToFill"></image>
			</div>
			<div class="inner" ref="createInner">
				<div class="search-box">
					<image src="/static/image/home_icon_06.jpg" class="left-icon"></image>
					<input type="text" class="search-input" .v-bind:value="searchtext" placeholder="查找地点、公交、地铁" v-on:touchstart="searchAddress" :focus="focusss"  @input="bindInput"/>
					<text class="right-text">搜索</text>
					<!-- <text style="font-size: 20rpx;background-color:rgb(82,125,225);color: #ffffff;width: 100rpx;text-align: center;height: 50rpx;line-height: 50rpx;border-radius: 10rpx;">确定</text> -->
				</div>
				<div v-if="!notsearch">
					<scroll-view style="height:600rpx" class="row" scroll-y="true" >
						<!-- 当前位置周边 -->
						<div @tap="bindSearch(item)" style="border-bottom-width: 1rpx;border-color: #f3f3f3;" class="row-item2" v-for="(item,index) in danqianzb" :key="index"  v-if="item.location.length!=0">
						  <div class="row">
							  <text style="font-size: 30rpx;width: 100%;padding: 15rpx 0rpx;" class="row-item3">{{item.name}}</text>
							  <text style="font-size: 25rpx;width: 100%;" class="row-item3">{{item.address}}</text>
						  </div>
						</div>


						<div @tap="bindSearch(item)" style="border-bottom-width: 1rpx;border-color: #f3f3f3;" class="row-item2" v-for="(item,index) in tips" :key="index" v-if="item.location.length!=0">
						  <div class="row">
							  <text style="font-size: 30rpx;width: 100%;padding: 15rpx 0rpx;" class="row-item3">{{item.name}}</text>
							  <text style="font-size: 25rpx;width: 100%;" class="row-item3">{{item.district+item.address}}</text>
						  </div>
						</div>
					</scroll-view>
				</div>
				<div class="list-box" v-if="notsearch">
					<scroll-view class="row" scroll-y="true" >
						<div class="row-item" v-for="(item,index) in addressList" :key="index">
							<text class="row-item-txt">{{item.address}}</text>
							<image class="row-item-icon del-icon" src="/static/image/close@2x.png" @click="removeAddress(item.id)"></image>
						</div>
					</scroll-view>
				</div>
			</div>
		</div>


		<map key='map2'
		:longitude="longitude"
		:latitude="latitude"
		:enable-3D="true"
		:enable-overlooking='true'
		:show-location="true"
		:style="{width: '750rpx', height: phoneHeight + 'px'}"
		:scale="scale"
		:enable-traffic="true"
		:show-compass='true'
		:enable-satellite="satellite"
		@regionchange="gaibian">
		</map>
	</div>
</template>

<script>
	import Binding from 'weex-bindingx';
	import common from '@/common.js'
	import zySearch from '../../components/zy-search/zy-search.vue'
	import AMapWXfile from '@/plugins/amap-wx.js'
	var key = "b7ac380a83e2a2b753f0023d3931ba33";
	var sdkwx = uni.requireNativePlugin('AMap-NavSdkWX');

	var _this = null
	export default {
		data() {
			return {
				danqianzb:[],
				imagett:false,
				bglatitude:39.909,
				bglongitude:116.39742,
				map: null,
				scale:17,
				phoneHeight: 667,
				// 屏幕高度
				screenHeight: 667,
				latitude: 39.909,
				notsearch:true,
				topoint:{},
				mypolylines: [],
				mymarkers:[],
				searchtext:'',
				timer:'',
				tips: [],
				testdiv: "testdiv",
				topSize: 769,
				// 向上滑动的距离
				topHeight: 0,
				isTop: false,
				// 初始化禁止滑动
				scrollable: false,
				refreshing: false,
				contentOffsetY: 10,
				machineLists:[],
				machineInfo:{},
				createShow: true,
				close: true,
				addressList: [],
				home: '',
				work: '',
				change: 0,
				selOpen: false,
				watchOpen: false,
				imgList:[

				],

				menuList:[{
					name:'位置',
					path: '',
					src:'/static/image/location@2x.png'
				},{
					name:'警报',
					path:'/pages/alarm/index',
					src:'/static/image/alarm@2x.png'
				},{
					name:'运动',
					path:'',
					src:'/static/image/sport@2x.png'
				},{
					name:'围栏',
					path:'/pages/enclosure/index',
					src:'/static/image/fence@2x.png'
				},{
					name:'轨迹',
					path:'/pages/trajectory/index',
					src:'/static/image/trajectory@2x.png'
				},{
					name:'健康',
					path:'/pages/health/index',
					src:'/static/image/hearts@2x.png'
				},{
					name:'设置',
					path:'/pages/setting/index',
					src:'/static/image/set@2x.png'
				},{
					name:'设备详情',
					path:'/pages/setting/details',
					src:'/static/image/equipment@2x.png'
				},{
					name:'遥控拍照',
					path:'/pages/camera/index',
					src:'/static/image/photo@2x.png'
				},],
				latitude: '',
				longitude: '',
				clatitude: '',
				clongitude: '',
				imgconfig:{
					"1":{"icon":"/static/image/weatch@2x.png","pointimg":"/static/image/mapcnn@3x-watch.png"},
					"2":{"icon":"/static/image/big_workcard@2x.png","pointimg":"/static/image/mapcnn@3x-aaa.png"},
					"3":{"icon":"/static/image/big_car@2x.png","pointimg":"/static/image/big_car@2x.png"}
				},
				sechboxtt:'',
				focusss:false,
				bgname:'',
				endnames:'',
				endlon : 116.39742,
				endlan : 39.909,
				manjia:false,
				satellite:false,
				texrbix:'卫星:关',
				province:'',
			}
		},
		onShow(){
			setTimeout(function(){
				_this.manjia = true
			},100)
			var myAmapFun = new AMapWXfile.AMapWX({key: '9751ba7066e405d0f351b49dcc8b9704'});
			myAmapFun.getRegeo({
			      success: function(data){
					  _this.province = data[0].regeocodeData.addressComponent.province
			        // console.log(data.regeocodeData.addressComponent)
					console.log(data[0].regeocodeData.addressComponent.province)
			      },
			      fail: function(info){
			        //失败回调
			        console.log(info)
			      }
			    })

		},
		onHide(){
			_this.manjia = false
		},
		onReady() {
			let  that = this
			uni.getSystemInfo({
				success(res) {
					that.phoneHeight = res.windowHeight;
				}
			});

		},
		mounted() {
			_this = this;
			setTimeout(function(){
				_this.close=true
			},500)

			_this.getLocation()
			//_this.timer = setInterval(this.getMachineList(),5000)
		},
		distroyed: function () {
		　　clearInterval(_this.timer)
		},
		watch: {},
		methods: {
			gaibian(r){

			},
			dangqian(){
				console.log(_this.clongitude)
				_this.longitude= Number(_this.longitude)-0.000001 ;
				_this.latitude = Number(_this.latitude) -0.000001 ;
				// :longitude="longitude"
				// :latitude="latitude"
			},
			weixing(){
				if(_this.satellite==true){
					_this.satellite = !_this.satellite
					_this.texrbix = '卫星:关'
				}else{
					_this.satellite = !_this.satellite
					_this.texrbix = '卫星:开'
				}

			},
			daohangbtn(){

				uni.navigateTo({
					url: '/pages/index_daohang/indexccnew'
				});
				// var endlon = _this.endlon;
				// var endlan = _this.endlan;
				// var bg = _this.bglatitude ;
				// var bgt = _this.bglongitude ;
				// var bgname = _this.bgname ;
				// _this.imagett = false
				// var key = "b7ac380a83e2a2b753f0023d3931ba33";
				//  sdkwx.showRoute({
				//  theme:0,
				//  trafficEnabled:true,
				//  start:{
				//  coordinate:{
				//  latitude:bg,
				//  longitude:bgt
				//  },
				//  name:bgname,
				//  poiId:null
				//  },
				//  end:{
				// coordinate:{
				//   latitude:endlan,
				//   longitude:endlon
				//  },
				//  name:'',
				//  poiId:null
				//  },
				//  multipleRouteNaviMode:false
				//  }, function(res) {
				//  console.log(res.type);
				//  console.log(res.data);
				//  });
			},
			navTo(url) {
				uni.reLaunch({
					url: url
				});
			},
			sechbox(){
				console.log(_this.sechboxtt);
				var e = _this.sechboxtt ;
				var x = 1 ;
				_this.bindInput(e,x)
				_this.focusss = false
			},
		 bindInput(e,x){
		 			  var keywords = '' ;
		 			  if(x){
		 				 keywords = e
		 			  }else{
		 				keywords = e.detail.value;
		 				 _this.sechboxtt = e.detail.value;
		 			  }


		 			console.log(_this.province)
		 			var danqianzb = [] ;
		 			var yuan = [] ;
		 			if(keywords){
		 				var myAmapFun = new AMapWXfile.AMapWX({key: '9751ba7066e405d0f351b49dcc8b9704'});
		 				// danqianzb
		 				myAmapFun.getInputtips({
		 				  keywords: keywords,
		 				  location: '',
		 				  success: function(data){
		 					  console.log(data)
		 					if(data && data.tips){

		 						var  duibi = data.tips
		 						for(var i = 0 ; i <duibi.length ; i++){
		 							if(duibi[i].district.indexOf(_this.province)==0){
		 								danqianzb.push(duibi[i])
		 							}else{
		 								yuan.push(duibi[i])
		 							}
		 						}
		 						_this.danqianzb = danqianzb
		 						console.log(danqianzb);
		 						_this.tips = yuan
		 					}
		 				  }
		 				})
		 				_this.close=false

		 				_this.notsearch=false
		 			}else{
		 				_this.close=true
		 				_this.notsearch=true
		 				_this.focusss = false
		 			}
		 },
		  bindSearch(e){
			   console.log(e)
			  let lat = e.location.split(',')[1]
			  let lon = e.location.split(',')[0]
			  let endname = e.district+e.address
			  let bgname = _this.bgname ;
			  let bglat = _this.bglatitude;
			  let bglon =  _this.bglongitude ;
			 uni.navigateTo({
			 	url: '/pages/index_daohang/indexccnew?bglat=' +bglat +'&bglon='+bglon+'&endlat='+lat+'&endlon='+lon
			 });
			  _this.topoint={latitude:lat,longitude:lon}
			  _this.focusss = false
			  var key = "b7ac380a83e2a2b753f0023d3931ba33";
			  // uni.navigateTo({
			  // 	url: '/pages/index_daohang/indexccnew'
			  // });
			 //  sdkwx.showRoute({
			 //  theme:0,
			 //  trafficEnabled:true,
			 //  start:{
			 //  coordinate:{
				//   latitude:bglat,
				//   longitude:bglon
			 //  },
			 //  name:bgname,
			 //  poiId:null
			 //  },
			 //  end:{
				// coordinate:{
				//   latitude:lat,
				//   longitude:lon
			 //  },
			 //  name:endname,
			 //  poiId:null
			 //  }
			 //  }, function(res) {
				//    _this.searchtext = ' '
				//   console.log(res.type);
				//   console.log(res.data);
			 //  });
			 //  _this.togglePopup()
			  // _this.timer = setInterval(_this.startroute,5000)
		  },


			markertap(e){
				var mymarkers = _this.mymarkers ;
				var ind = Number(e.detail.markerId)
				 _this.longitude = mymarkers[ind].longitude;
				 _this.latitude = mymarkers[ind].latitude;
				console.log(mymarkers[ind]);
				var myAmapFun = new AMapWXfile.AMapWX({key:'9751ba7066e405d0f351b49dcc8b9704'});
				_this.imagett = true ;
				var endlon = mymarkers[ind].longitude ;
				var endlan = mymarkers[ind].latitude;
				_this.endlon =  mymarkers[ind].longitude  ;
				_this.endlan = mymarkers[ind].latitude;
				let desdis = endlon+','+ endlan
				var bg = _this.bglatitude ;
				var bgt = _this.bglongitude ;
				let sourcedis =bgt +","+ bg ;

				_this.scale = 15
				myAmapFun.getDrivingRoute({origin:sourcedis,destination:desdis,success:function(data){
					let pathtemp = data.paths[0]
					let pls = [];
					for(let l in pathtemp.steps){
						let step = pathtemp.steps[l]
						let line = step.polyline
						let points = step.polyline.split(';')
						let pl = []
						for(let i in points){
							let point = points[i]
							let aao = point.split(',')
							let p = {latitude: eval(aao[1]), longitude: eval(aao[0])}
							pl.push(p)
						}
						if(l==0)
						pls.push({points:pl,color:'#0000ff',width:6})
						else
						pls.push({points:pl,color:'rgba(0,0,255,0.3)',width:6})
						//_this.polylines=[{latitude: 0, longitude: 0}]
					}
					_this.mypolylines=pls
					// console.log(_this.mypolylines)
				},error:function(data){
					console.log(data)
				}})
			},

			// 路由跳转
			goUrl(item) {
				console.log(item)
				_this.close = true
				uni.navigateTo({
					url: item.url
				});
			},
			goUrlt(item) {
				console.log(item)
				uni.navigateTo({
					url: item
				});
			},
			// 关闭手表信息
			closeWatchInfo() {
				_this.watchOpen = false
			},
			// 打开选择框
			openSel() {
				_this.selOpen = true
				_this.watchOpen = true
			},
			// 关闭选择框
			closeSel() {
				_this.selOpen =  false
			},

			changes(index) {
				_this.change = index;
				_this.machineInfo = _this.machineLists[_this.change].machineInfo;
				console.log(_this.machineInfo)
				_this.latitude = _this.machineInfo.latitude
				_this.longitude = _this.machineInfo.longitude
				uni.setStorageSync('deviceid',_this.machineInfo.deviceid);
				_this.getRole();
				_this.$forceUpdate();
				_this.scale = 15
				_this.mypolylines = [] ;

			},
			togglePopup() {
				this.close = !this.close;
				if(this.close){
					this.notsearch=true
					this.searchtext = ''
				}
			},

			getDrivingLine(latitude,longitude){
						let desdis = longitude+','+latitude
						let sourcedis = _this.longitude+","+_this.latitude
						var amap = new AMapWXfile.AMapWX({key:'9751ba7066e405d0f351b49dcc8b9704'});
						amap.getDrivingRoute({origin:sourcedis,destination:desdis,success:function(data){

							let pathtemp = data.paths[0]
							console.log(data)
							let pls = [];
							for(let l in pathtemp.steps){
								let step = pathtemp.steps[l]
								let line = step.polyline
								let points = step.polyline.split(';')
								let pl = []
								for(let i in points){
									let point = points[i]
									let aao = point.split(',')
									let p = {latitude: eval(aao[1]), longitude: eval(aao[0])}
									pl.push(p)
								}
								if(l==0)
								pls.push({points:pl,color:'#0000ff',width:6})
								else
								pls.push({points:pl,color:'rgba(0,0,255,0.3)',width:6})
								//_this.polylines=[{latitude: 0, longitude: 0}]
							}
							_this.mypolylines=pls
							console.log(_this.mypolylines)
						},error:function(data){
							console.log(data)
						}})
			},
			getLocation() {
				uni.getLocation({
					type: 'wgs84',
					success: function(res) {
						_this.bglatitude = res.latitude;
						_this.bglongitude = res.longitude;
						_this.latitude = res.latitude;
						_this.longitude = res.longitude;
						_this.clatitude =  res.latitude;
						_this.clongitude = res.longitude;
					}
				});
				var myAmapFun = new AMapWXfile.AMapWX({key: '9751ba7066e405d0f351b49dcc8b9704'});
				myAmapFun.getRegeo({
				  success: function(data){
					  // console.log(data[0].name) ;
					  _this.bgname = data[0].name
				  }
				})
			},
			nowLocation() {
				uni.getLocation({
					type: 'wgs84',
					success: function(res) {
						_this.lng = res.longitude;
						_this.lat = res.latitude;
					}
				});
			},
			scan(){

				// console.log(1111)
				uni.scanCode({
					success:function(res){
						uni.navigateTo({
							url:"/pages/machine/bind?frompage="+res.result
						})
					}
				});

			},
			searchAddress(e){
				_this.focusss = true ;
				console.log('on click')
			},
			startroute(){
				_this.getDrivingLine(_this.topoint.latitude,_this.topoint.longitude)
				_this.getLocation()
			},
			addAddress(type) {
				uni.chooseLocation({
					success: function(res) {
						var data = {};
						data.lng = res.longitude;
						data.lat = res.latitude;
						data.address = res.address;
						data.type = type;

					}
				});
			},

		}
	}
</script>

<style>
	@import "./css/index.css";
	.testdiv {
		width: 750rpx;
		height: 1600rpx;
		position: fixed;
	}
</style>
